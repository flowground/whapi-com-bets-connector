{
    "title": "Bets",
    "description": "The Bets API methods are used to place single, multiple and complex bets and to retrieve a customer's bet history. When retrieving a customer's bet history you can organize the bets from the betting history in terms of date, bet type and whether the bet is settled or not. You can also specify what fields to be included/excluded or return a list of all default fields the method returns. <br /><br /> The Bets API will also generate a bet delay if you're placing a single/multiple bet in-Play by creating a time margin to negate the effects of major changes to the market (for example, goals during a football match). Note that in version 2 of our APIs, Bets API contains the functionality of both Bets API v1 and the Betslips API v1.",
    "docsUrl": "",
    "url": "https://api.apis.guru/v2/specs/whapi.com/bets/2.0.0/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://sandbox.whapi.com/v2/bets",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "apiKey": {
                "label": "apiKey (apiKey)",
                "viewClass": "TextFieldView",
                "note": "A unique identifier of your application that is generated by the API portal."
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "placeComplexBet": {
            "main": "./lib/actions/placeComplexBet.js",
            "title": "Places a multiple or a complex bet.",
            "description": "Places a multiple or a complex bet.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/placeComplexBet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "placeSingleBet": {
            "main": "./lib/actions/placeSingleBet.js",
            "title": "Places a single bet",
            "description": "Places a single bet. When placing a single bet using live inplay bets, the system might generate a bet delay to allow a time margin to negate the effects of major changes (for example, goals) to the market.  Note that the amount of bet delay will vary by category and event type. A delayedBetId will be recieved that can be used to resubmit the bet.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/placeSingleBet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "validateBetslip": {
            "main": "./lib/actions/validateBetslip.js",
            "title": "Organises the betslip when one or more selections are made. It returns a bet slip structure organised by betting opportunities.",
            "description": "Organises the betslip when one or more selections are made. It returns a bet slip structure organised by betting opportunities.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/validateBetslip.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getFreeBets": {
            "main": "./lib/actions/getFreeBets.js",
            "title": "Returns available free bets",
            "description": "Retrieves the current free bets available for a customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getFreeBets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getBetHistory": {
            "main": "./lib/actions/getBetHistory.js",
            "title": "Retrieves the customer's bet history.",
            "description": "Retrieves the customer's bet history. Options are available to organise the history in terms of date, bet type and settled and unsettled bets. The maximum number of bets and bet history pages retrieved can also be set.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getBetHistory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "cashin": {
            "main": "./lib/actions/cashin.js",
            "title": "Allows a trusted application to cash in a bet (take a return on a bet) on behalf of the customer",
            "description": "Allows a trusted application to cash in a bet (take a return on a bet) on behalf of the customer. If the customers monitor bets they can cash in a bet at any point before the event ends.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/cashin.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}